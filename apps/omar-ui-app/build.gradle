buildscript {

  repositories {
    mavenLocal()
    if (!gradleOffline) {
      maven { url "${mavenRepoUrl}/ossim-deps" }
      maven { url "https://repo.grails.org/grails/core" }
    }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:${project.grailsVersion}"
    classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineGradleV}"
    classpath "net.errbuddy.plugins:babel-asset-pipeline:${babelAssetPipelineV}"
  }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "java"
apply plugin: "maven"

group "io.ossim.omar.apps"

assets {
  includes = ["**/fonts/**"]
  excludes = [
    //"**/application.js",
    "**/i18n/**",
    "**/jquery*",
    "**/omar/**",
    "**/webjars/**",
    "**/*-debug.js",
    "**/*-deps.js",
    "**/*-openlayers*",
    "**/*.gz",
    "**/*.html",
    "**/*.txt",
  ]
}

repositories {
  if (!gradleOffline) {
    // maven { url  "http://dl.bintray.com/dmahapatro/plugins" }
    maven { url "${mavenRepoUrl}/ossim-deps" }
  }
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudDependencyV}"
  }
  applyMavenExclusions false
}

grails {
  repositories {
    mavenLocal()
    if (!gradleOffline) {
      maven { url "${mavenRepoUrl}/ossim-deps" }
    }
  }
  plugins {
    compile('io.ossim.omar.plugins:omar-hibernate-spatial-plugin') {
      version {
        branch = 'feature-match-icarus-template'
      }
    }
    compile('io.ossim.omar.plugins:omar-core-plugin') {
      version {
        branch = 'feature-match-icarus-template'
      }
    }
    compile('io.ossim.omar.plugins:omar-openlayers-plugin') {
      version {
        branch = 'feature-match-icarus-template'
      }
    }
  }
}

apply plugin: 'java-base'
apply plugin: "maven-publish"

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

dependencies {

  compile "de.codecentric:spring-boot-admin-starter-client:${springBootAdminStarterClientV}"

  compile "org.grails.plugins:browser-detection:3.3.0"

  // UI Webjar core dependencies
  compile "org.webjars:jquery:2.1.4"
  compile "org.webjars:jquery-ui:1.10.3"
  compile "org.webjars:bootstrap:3.3.5"
  compile "org.webjars.bower:angularjs:1.4.8"
  compile "org.webjars:angular-ui-router:0.2.15"
  compile "org.webjars.npm:angular-ui-bootstrap:0.14.3"
  compile "org.webjars:angular-deferred-bootstrap:0.1.5"
  compile "org.webjars.bower:bootstrap-select:${bootstrapSelectV}"
  compile "org.webjars.bower:devbridge-autocomplete:1.2.21"
  compile "org.webjars:spin-js:2.1.0"
  compile "org.webjars.npm:angular-spinner:0.7.0"
  compile "org.webjars.bower:angular-toastr:1.6.0"
  compile "org.webjars:momentjs:2.11.0"
  compile "org.webjars:angular-strap:2.3.4"
  compile "org.webjars.npm:slick-carousel:${slickCarouselV}"
  compile "org.webjars.bower:angular-slick-carousel:${angularSlickCarouselV}"
  compile "org.webjars.bower:angular-toggle-switch:1.3.0"
  compile "org.webjars.bower:angular-clipboard:1.4.2"
  compile "org.webjars:angular-ui-select:0.17.1"
  compile "org.webjars.bower:angular-ui-select2:0.0.5"
  compile "org.webjars.npm:angular-sanitize:1.4.8"
  compile "org.webjars.bower:microplugin:0.0.3"
  compile "org.webjars:selectize.js:${selectizeV}"
  compile "org.webjars.bower:seiyria-bootstrap-slider:${seiyriaBootstrapSliderV}"

  // Font stuff
  compile "org.webjars:font-awesome:4.4.0"

  // Dark .css themes
  compile "org.webjars:bootswatch-darkly:3.3.5+4"
  compile "org.webjars:bootswatch-slate:3.3.5+4"
  compile "org.webjars:bootswatch-superhero:3.3.5+4"

  // Light .css themes
  compile "org.webjars:bootswatch-spacelab:3.3.5+4"
  compile "org.webjars:bootswatch-cosmo:3.3.5+4"
  compile "org.webjars:bootswatch-flatly:3.3.5+4"
  compile "org.webjars:bootswatch-default:3.3.5+4"

  compile "org.springframework.cloud:spring-cloud-starter-config"
  compile "org.springframework.cloud:spring-cloud-starter-eureka"
  //compile "org.springframework.cloud:spring-cloud-starter-zipkin"

  compile "net.errbuddy.plugins:babel-asset-pipeline:${babelAssetPipelineV}"

//  compile "org.hibernate:hibernate-core:${hibernateCoreV}" No version in plugin

//  runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineGrailsV" No version in plugin

//  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumHtmlUnitDriverV}" No version specified
//  testRuntime "net.sourceforge.htmlunit:htmlunit:${htmlUnitV}" No version specified

}

bootRun {
    jvmArgs = [
    ]
}
